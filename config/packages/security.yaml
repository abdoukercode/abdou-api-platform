security:
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN:  ROLE_ADMIN

    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
        App\Entity\User: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, db_provider]
        in_memory:
            memory:
                users:
                    super:
                        password: $2y$12$QcLtXZX9FfaoGUaOfLGAAudOSfzleepJbBH6yURlosGCki9iwejJ2
                        roles: 'ROLE_SUPER_ADMIN'
        db_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        main:
            pattern:   ^/
            provider: chain_provider
            #            stateless: true
            anonymous: true
            form_login:
                login_path: login
                check_path: login
            logout:
                path:  /logout
                target: /login
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: db_provider
            json_login:
                check_path: /login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:  ^/api
            stateless: true
            anonymous: false
            provider: db_provider
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        register:
            pattern:  ^/register
            stateless: true
            anonymous: true



#            guard:
#                authenticators:
#                - lexik_jwt_authentication.jwt_token_authenticator
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user_registration, roles: ROLE_SUPER_ADMIN }
        - { path: ^/api, roles: [ROLE_ADMIN] }
        - { path: ^/, roles: [ROLE_ADMIN]}

